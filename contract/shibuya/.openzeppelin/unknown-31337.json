{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x6ea64c3184e15ea962d86ea680443e2b41c5f325dc229fc74d1580613595e6b2"
  },
  "proxies": [
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x97f8ce5a8a651e976ea5121d52fae620a8a42b466ad459d1a8954e0109b03e3f",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xe2f0163beee891d9f26df34a901ca9a3e9827824dc507312c6e885b1a1415311",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x83e51417d44586d0fdc38e59c7cc0ba92aa4e2b5ce5c1809c57d32a2baf93c06",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x5b133c08e43b4e11df1c208ad47a73210e69a876ff6f8f10e7fce214fdfe15d9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "71a130fede1ece0b47610008c1f25d2bb55ac824166255aad6440242587cfd11": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xcdf646818e87943dfc798de7bad1bb9a31d9fb6745386929e38c45feaf5dd420",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "registeredCnt",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)556_storage",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:15"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:16"
          },
          {
            "label": "PREFIX",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes_storage",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:17"
          },
          {
            "label": "POSTFIX",
            "offset": 0,
            "slot": "104",
            "type": "t_bytes_storage",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:18"
          },
          {
            "label": "MSG_PREFIX",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:19"
          },
          {
            "label": "beneficiary",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:20"
          },
          {
            "label": "unregisterFee",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:21"
          },
          {
            "label": "paused",
            "offset": 0,
            "slot": "108",
            "type": "t_bool",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:22"
          },
          {
            "label": "addressMap",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:23"
          },
          {
            "label": "ss58Map",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes_memory_ptr,t_address)",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:24"
          },
          {
            "label": "DAPPS_STAKING",
            "offset": 0,
            "slot": "111",
            "type": "t_contract(DappsStaking)1341",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:25"
          },
          {
            "label": "SR25519Contract",
            "offset": 0,
            "slot": "112",
            "type": "t_contract(SR25519)1417",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:26"
          },
          {
            "label": "ECDSAContract",
            "offset": 0,
            "slot": "113",
            "type": "t_contract(ECDSA)1380",
            "contract": "AstarBase",
            "src": "contracts/AstarBase.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(DappsStaking)1341": {
            "label": "contract DappsStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ECDSA)1380": {
            "label": "contract ECDSA",
            "numberOfBytes": "20"
          },
          "t_contract(SR25519)1417": {
            "label": "contract SR25519",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_address)": {
            "label": "mapping(bytes => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)556_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b5339384c87c66da3552ba74a10a6a0f64cb9b28f13ee0ebe42b47920074e1ea": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x750755430146725cad9348695bfb876a4d13a9e78880bb9cf68f8034ca701b32",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "registeredCnt",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)556_storage",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:16"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:17"
          },
          {
            "label": "PREFIX",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes_storage",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:18"
          },
          {
            "label": "POSTFIX",
            "offset": 0,
            "slot": "104",
            "type": "t_bytes_storage",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:19"
          },
          {
            "label": "MSG_PREFIX",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:20"
          },
          {
            "label": "beneficiary",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:21"
          },
          {
            "label": "unregisterFee",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:22"
          },
          {
            "label": "paused",
            "offset": 0,
            "slot": "108",
            "type": "t_bool",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:23"
          },
          {
            "label": "addressMap",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:24"
          },
          {
            "label": "ss58Map",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes_memory_ptr,t_address)",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:25"
          },
          {
            "label": "DAPPS_STAKING",
            "offset": 0,
            "slot": "111",
            "type": "t_contract(DappsStaking)1383",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:26"
          },
          {
            "label": "SR25519Contract",
            "offset": 0,
            "slot": "112",
            "type": "t_contract(SR25519)1459",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:27"
          },
          {
            "label": "ECDSAContract",
            "offset": 0,
            "slot": "113",
            "type": "t_contract(ECDSA)1422",
            "contract": "AstarBaseV3",
            "src": "contracts/AstarBaseV3.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(DappsStaking)1383": {
            "label": "contract DappsStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ECDSA)1422": {
            "label": "contract ECDSA",
            "numberOfBytes": "20"
          },
          "t_contract(SR25519)1459": {
            "label": "contract SR25519",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_address)": {
            "label": "mapping(bytes => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)556_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
